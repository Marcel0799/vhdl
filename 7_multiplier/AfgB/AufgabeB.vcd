$date
  Mon Oct 12 21:07:04 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module mult_tb $end
$var reg 4 ! x[3:0] $end
$var reg 4 " y[3:0] $end
$var reg 8 # z[7:0] $end
$scope module multiplier $end
$var reg 4 $ x[3:0] $end
$var reg 4 % y[3:0] $end
$var reg 8 & z[7:0] $end
$var reg 4 ' r0[3:0] $end
$var reg 4 ( r1[3:0] $end
$var reg 4 ) r2[3:0] $end
$var reg 4 * r3[3:0] $end
$var reg 4 + c1[3:0] $end
$var reg 4 , c2[3:0] $end
$var reg 4 - c3[3:0] $end
$var reg 1 . wire_3 $end
$scope module xha10 $end
$var reg 1 / y $end
$var reg 1 0 x $end
$var reg 1 1 b $end
$var reg 1 2 s $end
$var reg 1 3 c $end
$var reg 1 4 a $end
$upscope $end
$scope module xfa11 $end
$var reg 1 5 x $end
$var reg 1 6 y $end
$var reg 1 7 s $end
$var reg 1 8 cin $end
$var reg 1 9 cout $end
$var reg 1 : sum $end
$var reg 1 ; a $end
$var reg 1 < wire_1 $end
$var reg 1 = wire_2 $end
$var reg 1 > wire_3 $end
$upscope $end
$scope module xfa12 $end
$var reg 1 ? x $end
$var reg 1 @ y $end
$var reg 1 A s $end
$var reg 1 B cin $end
$var reg 1 C cout $end
$var reg 1 D sum $end
$var reg 1 E a $end
$var reg 1 F wire_1 $end
$var reg 1 G wire_2 $end
$var reg 1 H wire_3 $end
$upscope $end
$scope module xha13 $end
$var reg 1 I y $end
$var reg 1 J x $end
$var reg 1 K b $end
$var reg 1 L s $end
$var reg 1 M c $end
$var reg 1 N a $end
$upscope $end
$scope module xha20 $end
$var reg 1 O y $end
$var reg 1 P x $end
$var reg 1 Q b $end
$var reg 1 R s $end
$var reg 1 S c $end
$var reg 1 T a $end
$upscope $end
$scope module xfa21 $end
$var reg 1 U x $end
$var reg 1 V y $end
$var reg 1 W s $end
$var reg 1 X cin $end
$var reg 1 Y cout $end
$var reg 1 Z sum $end
$var reg 1 [ a $end
$var reg 1 \ wire_1 $end
$var reg 1 ] wire_2 $end
$var reg 1 ^ wire_3 $end
$upscope $end
$scope module xfa22 $end
$var reg 1 _ x $end
$var reg 1 ` y $end
$var reg 1 a s $end
$var reg 1 b cin $end
$var reg 1 c cout $end
$var reg 1 d sum $end
$var reg 1 e a $end
$var reg 1 f wire_1 $end
$var reg 1 g wire_2 $end
$var reg 1 h wire_3 $end
$upscope $end
$scope module xfa23 $end
$var reg 1 i x $end
$var reg 1 j y $end
$var reg 1 k s $end
$var reg 1 l cin $end
$var reg 1 m cout $end
$var reg 1 n sum $end
$var reg 1 o a $end
$var reg 1 p wire_1 $end
$var reg 1 q wire_2 $end
$var reg 1 r wire_3 $end
$upscope $end
$scope module xha30 $end
$var reg 1 s y $end
$var reg 1 t x $end
$var reg 1 u b $end
$var reg 1 v s $end
$var reg 1 w c $end
$var reg 1 x a $end
$upscope $end
$scope module xfa31 $end
$var reg 1 y x $end
$var reg 1 z y $end
$var reg 1 { s $end
$var reg 1 | cin $end
$var reg 1 } cout $end
$var reg 1 !" sum $end
$var reg 1 "" a $end
$var reg 1 #" wire_1 $end
$var reg 1 $" wire_2 $end
$var reg 1 %" wire_3 $end
$upscope $end
$scope module xfa32 $end
$var reg 1 &" x $end
$var reg 1 '" y $end
$var reg 1 (" s $end
$var reg 1 )" cin $end
$var reg 1 *" cout $end
$var reg 1 +" sum $end
$var reg 1 ," a $end
$var reg 1 -" wire_1 $end
$var reg 1 ." wire_2 $end
$var reg 1 /" wire_3 $end
$upscope $end
$scope module xfa33 $end
$var reg 1 0" x $end
$var reg 1 1" y $end
$var reg 1 2" s $end
$var reg 1 3" cin $end
$var reg 1 4" cout $end
$var reg 1 5" sum $end
$var reg 1 6" a $end
$var reg 1 7" wire_1 $end
$var reg 1 8" wire_2 $end
$var reg 1 9" wire_3 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b1010 !
b1101 "
b10000010 #
b1010 $
b1101 %
b10000010 &
b1010 '
b0101 (
b1100 )
b0000 *
b0000 +
b0010 ,
b1110 -
U.
0/
00
11
12
03
04
15
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
1A
0B
0C
1D
0E
0F
1G
0H
0I
1J
0K
0L
0M
0N
1O
0P
0Q
0R
0S
0T
1U
1V
1W
0X
1Y
0Z
1[
1\
0]
0^
0_
1`
0a
1b
0c
1d
0e
0f
0g
0h
1i
1j
0k
0l
0m
1n
1o
0p
1q
0r
1s
0t
0u
0v
0w
0x
1y
1z
1{
0|
1}
0!"
1""
1#"
0$"
0%"
0&"
1'"
1("
1)"
1*"
0+"
0,"
0-"
1."
1/"
10"
11"
02"
13"
14"
05"
16"
07"
18"
19"
#10000000
b0111 "
b01000110 #
b0111 %
b01000110 &
b1111 (
b0001 )
b1000 *
b1110 ,
b0000 -
1/
16
1:
1;
1=
1@
1I
1L
1N
1Q
1R
1a
1c
0d
1g
1h
1l
1m
0n
1r
0s
0z
0{
0}
0!"
0""
0#"
0$"
0'"
0("
0)"
0*"
0+"
0."
0/"
01"
12"
03"
04"
15"
06"
18"
09"
#20000000
b1001 !
b1101 "
b01110101 #
b1001 $
b1101 %
b01110101 &
b1001 '
b0100 (
b1011 )
b1110 *
b0000 ,
b0001 -
0/
10
01
02
05
06
0:
0;
0=
0@
0I
0L
0N
1P
0Q
1R
0S
1T
0U
0X
0Y
1Z
0[
0\
1]
0^
0a
0b
0c
0d
0g
0h
0l
0m
1n
0r
1s
1t
1u
0v
1w
1x
0y
1z
0{
1|
0}
1!"
0$"
0%"
1'"
1("
0)"
0*"
1+"
1."
0/"
11"
02"
03"
04"
15"
16"
07"
18"
09"
#30000000
b0111 "
b00111111 #
b0111 %
b00111111 &
b1101 (
b1111 )
b0111 *
b0000 -
1/
12
14
16
1@
1I
1L
1N
1a
1d
1g
0s
1v
0w
0x
0z
1{
0|
1!"
1$"
0'"
01"
05"
06"
08"
#40000000
