$date
  Mon Sep 21 16:31:12 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module demux1to8_tb $end
$var reg 1 ! s0 $end
$var reg 1 " s1 $end
$var reg 1 # s2 $end
$var reg 3 $ ix[2:0] $end
$var reg 3 % y0[2:0] $end
$var reg 3 & y1[2:0] $end
$var reg 3 ' y2[2:0] $end
$var reg 3 ( y3[2:0] $end
$var reg 3 ) y4[2:0] $end
$var reg 3 * y5[2:0] $end
$var reg 3 + y6[2:0] $end
$var reg 3 , y7[2:0] $end
$scope module demux1 $end
$var reg 3 - y0[2:0] $end
$var reg 3 . y1[2:0] $end
$var reg 3 / y2[2:0] $end
$var reg 3 0 y3[2:0] $end
$var reg 3 1 y4[2:0] $end
$var reg 3 2 y5[2:0] $end
$var reg 3 3 y6[2:0] $end
$var reg 3 4 y7[2:0] $end
$var reg 1 5 s0 $end
$var reg 1 6 s1 $end
$var reg 1 7 s2 $end
$var reg 3 8 ix[2:0] $end
$var reg 3 9 x0[2:0] $end
$var reg 3 : x1[2:0] $end
$var reg 3 ; x2[2:0] $end
$var reg 3 < x3[2:0] $end
$var reg 3 = x4[2:0] $end
$var reg 3 > x5[2:0] $end
$var reg 3 ? x6[2:0] $end
$var reg 3 @ x7[2:0] $end
$scope module demultiplex1 $end
$var reg 3 A y0[2:0] $end
$var reg 3 B y1[2:0] $end
$var reg 3 C y2[2:0] $end
$var reg 3 D y3[2:0] $end
$var reg 1 E s0 $end
$var reg 1 F s1 $end
$var reg 3 G ix[2:0] $end
$var reg 1 H x0 $end
$var reg 1 I x1 $end
$var reg 1 J x2 $end
$var reg 1 K x3 $end
$var reg 1 L s1not $end
$var reg 1 M s0not $end
$scope module not0 $end
$var reg 1 N input1 $end
$var reg 1 O not_result $end
$upscope $end
$scope module not1 $end
$var reg 1 P input1 $end
$var reg 1 Q not_result $end
$upscope $end
$scope module and0 $end
$var reg 1 R input1 $end
$var reg 1 S input2 $end
$var reg 1 T and_result $end
$var reg 1 U and_gate $end
$upscope $end
$scope module and1 $end
$var reg 1 V input1 $end
$var reg 1 W input2 $end
$var reg 1 X and_result $end
$var reg 1 Y and_gate $end
$upscope $end
$scope module and2 $end
$var reg 1 Z input1 $end
$var reg 1 [ input2 $end
$var reg 1 \ and_result $end
$var reg 1 ] and_gate $end
$upscope $end
$scope module and3 $end
$var reg 1 ^ input1 $end
$var reg 1 _ input2 $end
$var reg 1 ` and_result $end
$var reg 1 a and_gate $end
$upscope $end
$upscope $end
$scope module demultiplex2 $end
$var reg 3 b y0[2:0] $end
$var reg 3 c y1[2:0] $end
$var reg 3 d y2[2:0] $end
$var reg 3 e y3[2:0] $end
$var reg 1 f s0 $end
$var reg 1 g s1 $end
$var reg 3 h ix[2:0] $end
$var reg 1 i x0 $end
$var reg 1 j x1 $end
$var reg 1 k x2 $end
$var reg 1 l x3 $end
$var reg 1 m s1not $end
$var reg 1 n s0not $end
$scope module not0 $end
$var reg 1 o input1 $end
$var reg 1 p not_result $end
$upscope $end
$scope module not1 $end
$var reg 1 q input1 $end
$var reg 1 r not_result $end
$upscope $end
$scope module and0 $end
$var reg 1 s input1 $end
$var reg 1 t input2 $end
$var reg 1 u and_result $end
$var reg 1 v and_gate $end
$upscope $end
$scope module and1 $end
$var reg 1 w input1 $end
$var reg 1 x input2 $end
$var reg 1 y and_result $end
$var reg 1 z and_gate $end
$upscope $end
$scope module and2 $end
$var reg 1 { input1 $end
$var reg 1 | input2 $end
$var reg 1 } and_result $end
$var reg 1 !" and_gate $end
$upscope $end
$scope module and3 $end
$var reg 1 "" input1 $end
$var reg 1 #" input2 $end
$var reg 1 $" and_result $end
$var reg 1 %" and_gate $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
0"
0#
b101 $
b101 %
b000 &
b000 '
b000 (
b000 )
b000 *
b000 +
b000 ,
b101 -
b000 .
b000 /
b000 0
b000 1
b000 2
b000 3
b000 4
05
06
07
b101 8
b101 9
b000 :
b000 ;
b000 <
b101 =
b000 >
b000 ?
b000 @
b101 A
b000 B
b000 C
b000 D
0E
0F
b101 G
1H
0I
0J
0K
1L
1M
0N
1O
0P
1Q
1R
1S
1T
1U
0V
1W
0X
0Y
1Z
0[
0\
0]
0^
0_
0`
0a
b101 b
b000 c
b000 d
b000 e
0f
0g
b101 h
1i
0j
0k
0l
1m
1n
0o
1p
0q
1r
1s
1t
1u
1v
0w
1x
0y
0z
1{
0|
0}
0!"
0""
0#"
0$"
0%"
#10000000
1"
b000 %
b101 '
b000 -
b101 /
16
b000 9
b101 ;
b000 =
b101 ?
b000 A
b101 C
1F
0H
1J
0L
1P
0Q
0S
0T
0U
0W
1[
1\
1]
1_
b000 b
b101 d
1g
0i
1k
0m
1q
0r
0t
0u
0v
0x
1|
1}
1!"
1#"
#20000000
1!
0"
b101 &
b000 '
b101 .
b000 /
15
06
b101 :
b000 ;
b101 >
b000 ?
b101 B
b000 C
1E
0F
1I
0J
1L
0M
1N
0O
0P
1Q
0R
1S
1V
1W
1X
1Y
0Z
0[
0\
0]
1^
0_
b101 c
b000 d
1f
0g
1j
0k
1m
0n
1o
0p
0q
1r
0s
1t
1w
1x
1y
1z
0{
0|
0}
0!"
1""
0#"
#30000000
1"
b000 &
b101 (
b000 .
b101 0
16
b000 :
b101 <
b000 >
b101 @
b000 B
b101 D
1F
0I
1K
0L
1P
0Q
0S
0W
0X
0Y
1[
1_
1`
1a
b000 c
b101 e
1g
0j
1l
0m
1q
0r
0t
0x
0y
0z
1|
1#"
1$"
1%"
#40000000
0!
0"
1#
b000 (
b101 )
b000 ,
b000 0
b101 1
b000 4
05
06
17
b101 9
b000 <
b101 =
b000 @
b101 A
b000 D
0E
0F
1H
0K
1L
1M
0N
1O
0P
1Q
1R
1S
1T
1U
0V
1W
1Z
0[
0^
0_
0`
0a
b101 b
b000 e
0f
0g
1i
0l
1m
1n
0o
1p
0q
1r
1s
1t
1u
1v
0w
1x
1{
0|
0""
0#"
0$"
0%"
#50000000
1"
b000 )
b101 +
b000 1
b101 3
16
b000 9
b101 ;
b000 =
b101 ?
b000 A
b101 C
1F
0H
1J
0L
1P
0Q
0S
0T
0U
0W
1[
1\
1]
1_
b000 b
b101 d
1g
0i
1k
0m
1q
0r
0t
0u
0v
0x
1|
1}
1!"
1#"
#60000000
1!
0"
b101 *
b000 +
b101 2
b000 3
15
06
b101 :
b000 ;
b101 >
b000 ?
b101 B
b000 C
1E
0F
1I
0J
1L
0M
1N
0O
0P
1Q
0R
1S
1V
1W
1X
1Y
0Z
0[
0\
0]
1^
0_
b101 c
b000 d
1f
0g
1j
0k
1m
0n
1o
0p
0q
1r
0s
1t
1w
1x
1y
1z
0{
0|
0}
0!"
1""
0#"
#70000000
1"
b000 *
b101 ,
b000 2
b101 4
16
b000 :
b101 <
b000 >
b101 @
b000 B
b101 D
1F
0I
1K
0L
1P
0Q
0S
0W
0X
0Y
1[
1_
1`
1a
b000 c
b101 e
1g
0j
1l
0m
1q
0r
0t
0x
0y
0z
1|
1#"
1$"
1%"
#80000000
